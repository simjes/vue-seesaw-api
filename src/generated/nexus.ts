/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */






declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AnswerWhereInput: { // input type
    AND?: NexusGenInputs['AnswerWhereInput'][] | null; // [AnswerWhereInput!]
    answer?: string | null; // String
    answer_contains?: string | null; // String
    answer_ends_with?: string | null; // String
    answer_gt?: string | null; // String
    answer_gte?: string | null; // String
    answer_in?: string[] | null; // [String!]
    answer_lt?: string | null; // String
    answer_lte?: string | null; // String
    answer_not?: string | null; // String
    answer_not_contains?: string | null; // String
    answer_not_ends_with?: string | null; // String
    answer_not_in?: string[] | null; // [String!]
    answer_not_starts_with?: string | null; // String
    answer_starts_with?: string | null; // String
    id?: string | null; // ID
    id_contains?: string | null; // ID
    id_ends_with?: string | null; // ID
    id_gt?: string | null; // ID
    id_gte?: string | null; // ID
    id_in?: string[] | null; // [ID!]
    id_lt?: string | null; // ID
    id_lte?: string | null; // ID
    id_not?: string | null; // ID
    id_not_contains?: string | null; // ID
    id_not_ends_with?: string | null; // ID
    id_not_in?: string[] | null; // [ID!]
    id_not_starts_with?: string | null; // ID
    id_starts_with?: string | null; // ID
    NOT?: NexusGenInputs['AnswerWhereInput'][] | null; // [AnswerWhereInput!]
    OR?: NexusGenInputs['AnswerWhereInput'][] | null; // [AnswerWhereInput!]
    poll?: NexusGenInputs['PollWhereInput'] | null; // PollWhereInput
    votes?: number | null; // Int
    votes_gt?: number | null; // Int
    votes_gte?: number | null; // Int
    votes_in?: number[] | null; // [Int!]
    votes_lt?: number | null; // Int
    votes_lte?: number | null; // Int
    votes_not?: number | null; // Int
    votes_not_in?: number[] | null; // [Int!]
  }
  PollWhereInput: { // input type
    AND?: NexusGenInputs['PollWhereInput'][] | null; // [PollWhereInput!]
    answers_every?: NexusGenInputs['AnswerWhereInput'] | null; // AnswerWhereInput
    answers_none?: NexusGenInputs['AnswerWhereInput'] | null; // AnswerWhereInput
    answers_some?: NexusGenInputs['AnswerWhereInput'] | null; // AnswerWhereInput
    id?: string | null; // ID
    id_contains?: string | null; // ID
    id_ends_with?: string | null; // ID
    id_gt?: string | null; // ID
    id_gte?: string | null; // ID
    id_in?: string[] | null; // [ID!]
    id_lt?: string | null; // ID
    id_lte?: string | null; // ID
    id_not?: string | null; // ID
    id_not_contains?: string | null; // ID
    id_not_ends_with?: string | null; // ID
    id_not_in?: string[] | null; // [ID!]
    id_not_starts_with?: string | null; // ID
    id_starts_with?: string | null; // ID
    NOT?: NexusGenInputs['PollWhereInput'][] | null; // [PollWhereInput!]
    OR?: NexusGenInputs['PollWhereInput'][] | null; // [PollWhereInput!]
    question?: string | null; // String
    question_contains?: string | null; // String
    question_ends_with?: string | null; // String
    question_gt?: string | null; // String
    question_gte?: string | null; // String
    question_in?: string[] | null; // [String!]
    question_lt?: string | null; // String
    question_lte?: string | null; // String
    question_not?: string | null; // String
    question_not_contains?: string | null; // String
    question_not_ends_with?: string | null; // String
    question_not_in?: string[] | null; // [String!]
    question_not_starts_with?: string | null; // String
    question_starts_with?: string | null; // String
  }
  PollWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
}

export interface NexusGenEnums {
  AnswerOrderByInput: "answer_ASC" | "answer_DESC" | "createdAt_ASC" | "createdAt_DESC" | "id_ASC" | "id_DESC" | "updatedAt_ASC" | "updatedAt_DESC" | "votes_ASC" | "votes_DESC"
  MutationType: "CREATED" | "DELETED" | "UPDATED"
}

export interface NexusGenRootTypes {
  Answer: { // root type
    answer: string; // String!
    id: string; // ID!
    votes: number; // Int!
  }
  AnswerPreviousValues: { // root type
    answer: string; // String!
    id: string; // ID!
    votes: number; // Int!
  }
  AnswerSubscriptionPayload: { // root type
    mutation: NexusGenEnums['MutationType']; // MutationType!
    node?: NexusGenRootTypes['Answer'] | null; // Answer
    previousValues?: NexusGenRootTypes['AnswerPreviousValues'] | null; // AnswerPreviousValues
    updatedFields?: string[] | null; // [String!]
  }
  Mutation: {};
  Poll: { // root type
    id: string; // ID!
    question: string; // String!
  }
  Query: {};
  Subscription: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  AnswerWhereInput: NexusGenInputs['AnswerWhereInput'];
  PollWhereInput: NexusGenInputs['PollWhereInput'];
  PollWhereUniqueInput: NexusGenInputs['PollWhereUniqueInput'];
  AnswerOrderByInput: NexusGenEnums['AnswerOrderByInput'];
  MutationType: NexusGenEnums['MutationType'];
}

export interface NexusGenFieldTypes {
  Answer: { // field return type
    answer: string; // String!
    id: string; // ID!
    poll: NexusGenRootTypes['Poll']; // Poll!
    votes: number; // Int!
  }
  AnswerPreviousValues: { // field return type
    answer: string; // String!
    id: string; // ID!
    votes: number; // Int!
  }
  AnswerSubscriptionPayload: { // field return type
    mutation: NexusGenEnums['MutationType']; // MutationType!
    node: NexusGenRootTypes['Answer'] | null; // Answer
    previousValues: NexusGenRootTypes['AnswerPreviousValues'] | null; // AnswerPreviousValues
    updatedFields: string[] | null; // [String!]
  }
  Mutation: { // field return type
    createPoll: NexusGenRootTypes['Poll']; // Poll!
    vote: NexusGenRootTypes['Answer']; // Answer!
  }
  Poll: { // field return type
    answers: NexusGenRootTypes['Answer'][] | null; // [Answer!]
    id: string; // ID!
    question: string; // String!
  }
  Query: { // field return type
    poll: NexusGenRootTypes['Poll'] | null; // Poll
  }
  Subscription: { // field return type
    pollResult: NexusGenRootTypes['AnswerSubscriptionPayload']; // AnswerSubscriptionPayload!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createPoll: { // args
      answers: string[]; // [String!]!
      question: string; // String!
    }
    vote: { // args
      answerId: string; // ID!
    }
  }
  Poll: {
    answers: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenEnums['AnswerOrderByInput'] | null; // AnswerOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['AnswerWhereInput'] | null; // AnswerWhereInput
    }
  }
  Query: {
    poll: { // args
      where: NexusGenInputs['PollWhereUniqueInput']; // PollWhereUniqueInput!
    }
  }
  Subscription: {
    pollResult: { // args
      pollId?: string | null; // ID
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Answer" | "AnswerPreviousValues" | "AnswerSubscriptionPayload" | "Mutation" | "Poll" | "Query" | "Subscription";

export type NexusGenInputNames = "AnswerWhereInput" | "PollWhereInput" | "PollWhereUniqueInput";

export type NexusGenEnumNames = "AnswerOrderByInput" | "MutationType";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}